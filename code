drop table ticket_detail cascade constraints; 
drop table ticket cascade constraints; 
drop table topic cascade constraints;
drop table support cascade constraints; 
drop table client cascade constraints; 

create table client 
(clid int, 
clname varchar(50),
clemail varchar(50),
primary key(clid));

insert into client values
(1, 'Ella','ella@gmail.com');

insert into client values
(2, 'Eric','eric@gmail.com');

insert into client values
(3, 'Olivia','olivia@gmail.com');

create table support 
(sid int, 
sname varchar(50),
semail varchar(50),
primary key (sid));

insert into support 
values(1,'Nancy','nancy@gmail.com');

insert into support 
values(2,'Ethan','ethan@gmail.com');

insert into support 
values(3,'Grace','grace@gmail.com');

insert into support 
values(4,'John','john@gmail.com');

create table topic 
(tid int, 
tname varchar(50),
ptid int, 
primary key (tid),
foreign key (ptid) references topic);

insert into topic 
values(1,'computing technology',null);

insert into topic values(2,'network connection',1);

insert into topic 
values(3, 'software',1);

insert into topic 
values(8, 'microsoft',3);

insert into topic 
values(4,'email',1);

insert into topic 
values(5,'academic',null);

insert into topic 
values(6, 'advising',5);

insert into topic 
values(7, 'registration',5);

create table ticket 
(tkid int, 
clid int, 
tid int, 
sid int, 
tktime timestamp,
rstime timestamp, 
status int, 
description varchar(100),
primary key (tkid),
foreign key (clid) references client, 
foreign key (tid) references topic, 
foreign key (sid) references support);

-- microsoft issue submitted by Ella, assigned 
insert into ticket values 
(1,1, 8, 1,timestamp '2022-10-1 10:05:00.00', null, 1,'I have trouble installing office on my office computer');

-- registration issue by Ella, resolved
insert into ticket values 
(2,1, 7,1, timestamp '2022-10-2 12:05:00.00', timestamp '2022-10-3 8:00:00.00', 1, 
'I have trouble access the registration page');

-- email issue by Eric, initialized  
insert into ticket values 
(3,2, 4,null, timestamp '2022-10-3 15:05:00.00', null,1, 'I forgot my email password');

-- network issue by Olivia, ongoing
insert into ticket values 
(4,3, 2,2, timestamp '2022-10-6 09:05:00.00',null, 1, 'I have connection issue at home');

insert into ticket values 
(5,3, 3, null, timestamp '2022-10-10 09:05:00.00',null, 1, 'I cannot log into blackboard');

create table ticket_detail 
(tdid int, 
tkid int, 
sid int, 
tdtime timestamp, 
content varchar(100),
primary key(tdid),
foreign key(tkid) references ticket,
foreign key(sid) references support);

--- ticket 1 assigned  
insert into ticket_detail 
values(1,1,1,timestamp '2022-10-1 11:05:00.00','ticket assigned to support staff');

-- ticket 1 
insert into ticket_detail 
values(2,1,1,timestamp '2022-10-1 11:10:00.00','instructions sent to client');

-- ticket 2 assigned
insert into ticket_detail 
values(3, 2, 1, timestamp '2022-10-2 14:00:00.00', 
'ticket assigned to support staff');

-- ticket 2  resolved. 
insert into ticket_detail 
values(4, 2, 1, timestamp '2022-10-3 8:00:00.00', 
'permission changed to allow client access registration page');

-- ticket 4, assigned. 
insert into ticket_detail 
values(5, 4, 2, timestamp '2022-10-6 10:00:00.00', 
'ticket assigned to support staff');

-- ticket 3, assigned. 
insert into ticket_detail 
values(6, 3, 3, timestamp '2022-10-3 16:05:00.00', 
'ticket assigned to support staff');

commit;

Problem 1: [50 points] Please write an anonymous PL/SQL program to print out the first 10 numbers of the following sequence F(n).  
F(0) = 2, F(1)=5. F(n)=5*F(n-1)-4*F(n-2).
E.g., F(3) = 5*F(2) - 4 F(1) = 5*5-4*2=17,....
Your program will print out F(0),F(1),..., F(9).


Hint: use three variables, the first storing F(n), the second storing F(n-1), and the third storing F(n-2). Think of how to compute the first variable from the other two and how to update the other two variables in each iteration. 

set serveroutput on;
declare
i integer;
f1 integer;
f2 integer; 
f3 integer;
begin
 f1:=2;
 f2:=5; 
 i:= 2;
 dbms_output.put_line(f1);
 dbms_output.put_line(f2);
 loop
   f3:=5*f2-4*f1;
   dbms_output.put_line(f3);
   i:=i+1;
   f1:=f2; -- update f(n-2) to f(n-1)
   f2:=f3; -- update f(n-1) to f(n)   
   exit when i> 9;   
 end loop;
end;


-- Result: 
2
5
17
65
257
1025
4097
16385
65537
262145

-- or using for loop
declare
i integer;
f1 integer;
f2 integer; 
f3 integer;
begin
 f1:=2;
 f2:=5; 
 i:= 2;
 dbms_output.put_line(f1);
 dbms_output.put_line(f2);
 for i in 2..9 loop 
   f3:=5*f2-4*f1;
   dbms_output.put_line(f3);   
   f1:=f2; -- update f(n-2) to f(n-1)
   f2:=f3; -- update f(n-1) to f(n)      
 end loop;
end;

--- math formula 
f(n)= 4^n +  1^n
f(0) = 2 
f(1)= 5
f(2) = 17
f(3) = 5*17-4*5
=65

Problem 2: Write anonymous PL/SQL Please write an anonymous PL/SQL program to do ALL of the following:
1) check whether there is a ticket with ID 1.
2) Print out name of the client who submitted the ticket with ID 1, submission time, description and status. 
3) print out all rows in ticket_detail that is associated with this ticket (with ID 1), including name of support staff who entered the information, time of the record, and content.

Hint: use select count(*) and if then else for step 1. 
use an implicit cursor to do step 2.
Use an explicit cursor for step 3. 
[60 points]

declare
cursor c1 is 
select sname, tdtime, content
from ticket_detail t, support s  
where s.sid = t.sid and t.tkid = 1;
v_count int; 
v_clname client.clname%type;
v_tktime timestamp;
v_status int;
v_description ticket.description%type;
begin 
 select count(*) into v_count from ticket where tkid = 1;
 if v_count = 0 then 
  dbms_output.put_line('Invalid ticket ID');
 else 
 -- print ticket information 
  select clname, tktime, status, description 
  into v_clname, v_tktime, v_status, v_description
  from ticket t, client c 
  where tkid = 1 and t.clid = c.clid;
  dbms_output.put_line(v_clname || ' submitted the ticket at ' || v_tktime || ' current status ' || v_status || ' description ' || v_description);
  for r in c1 loop
   dbms_output.put_line('Detail at ' || r.tdtime || ' entered by ' || r.sname || ' content: ' || r.content);  
  end loop;
 end if;
end;
/

